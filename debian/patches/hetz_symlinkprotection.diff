Index: apache2/server/request.c
===================================================================
--- apache2.orig/server/request.c
+++ apache2/server/request.c
@@ -493,7 +493,7 @@ static int resolve_symlink(char *d, apr_
     savename = (lfi->valid & APR_FINFO_NAME) ? lfi->name : NULL;
 
     /* if OPT_SYM_OWNER is unset, we only need to check target accessible */
-    if (!(opts & OPT_SYM_OWNER)) {
+    if (/*!(opts & OPT_SYM_OWNER)*/0) { // Always enforce symlink checks
         if (apr_stat(&fi, d, lfi->valid & ~(APR_FINFO_NAME | APR_FINFO_LINK), p)
             != APR_SUCCESS)
         {
@@ -1134,6 +1134,7 @@ AP_DECLARE(int) ap_directory_walk(reques
              * if...we have allowed symlinks
              * skip the lstat and dummy up an APR_DIR value for thisinfo.
              */
+            /* Skip this... We always want symlinks checked
             if (r->finfo.filetype != APR_NOFILE
 #ifdef CASE_BLIND_FILESYSTEM
                 && (filename_len <= canonical_len)
@@ -1145,6 +1146,7 @@ AP_DECLARE(int) ap_directory_walk(reques
                 ++seg;
                 continue;
             }
+            */
 
             /* We choose apr_stat with flag APR_FINFO_LINK here, rather that
              * plain apr_stat, so that we capture this path object rather than
